<section class="products container mx-auto py-8">
    <div class="flex justify-between items-center mb-6">
        <h1 class="text-xl font-bold">Products</h1>
        <a href="/admin/products/create" class="btn-primary px-4 py-2 rounded-full text-white">Add New</a>
    </div>

    <% if(messages.success) { %>
    <div class="alert success mb-4 p-4 bg-green-100 text-green-700 rounded">
        <%= messages.success %>
    </div>
    <% } %>

    <% if(messages.error) { %>
    <div class="alert error mb-4 p-4 bg-red-100 text-red-700 rounded">
        <%= messages.error %>
    </div>
    <% } %>

    <div class="bg-white shadow-md rounded-lg overflow-hidden">
        <table class="w-full table-auto">
            <thead>
                <tr class="bg-gray-200 text-gray-700 uppercase text-sm leading-normal">
                    <th class="py-3 px-6 text-left">Image</th>
                    <th class="py-3 px-6 text-left">Name</th>
                    <th class="py-3 px-6 text-left">Category</th>
                    <th class="py-3 px-6 text-center">Price</th>
                    <th class="py-3 px-6 text-center">Size</th>
                    <th class="py-3 px-6 text-center">Status</th>
                    <th class="py-3 px-6 text-center">Actions</th>
                </tr>
            </thead>
            <tbody class="text-gray-600 text-sm">
                <% if(products.length > 0) { %>
                    <% products.forEach(function(product) { %>
                        <tr class="border-b border-gray-200 hover:bg-gray-100">
                            <td class="py-3 px-6 text-left">
                                <div class="flex items-center">
                                    <div class="w-16 h-16 flex-shrink-0">
                                        <img class="w-full h-full object-cover" src="<%= product.image %>" alt="<%= product.name %>">
                                    </div>
                                </div>
                            </td>
                            <td class="py-3 px-6 text-left"><%= product.name %></td>
                            <td class="py-3 px-6 text-left"><%= product.category ? product.category.name : 'Uncategorized' %></td>
                            <td class="py-3 px-6 text-center">â‚¹<%= product.price %></td>
                            <td class="py-3 px-6 text-center"><%= product.size %></td>
                            <td class="py-3 px-6 text-center">
                                <span class="status-toggle cursor-pointer py-1 px-3 rounded-full text-xs <%= product.isAvailable ? 'bg-green-200 text-green-600' : 'bg-red-200 text-red-600' %>" 
                                      data-id="<%= product._id %>"
                                      data-status="<%= product.isAvailable %>">
                                    <%= product.isAvailable ? 'Available' : 'Unavailable' %>
                                </span>
                            </td>
                            <td class="py-3 px-6 text-center">
                                <div class="flex item-center justify-center">
                                    <a href="/admin/products/edit/<%= product._id %>" class="w-4 mr-4 transform hover:text-yellow-500 hover:scale-110">
                                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
                                        </svg>
                                    </a>
                                    <form action="/admin/products/<%= product._id %>?_method=DELETE" method="POST" onsubmit="return confirm('Are you sure you want to delete this product?');">
                                        <button type="submit" class="w-4 mr-2 transform hover:text-red-500 hover:scale-110">
                                            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16" />
                                            </svg>
                                        </button>
                                    </form>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                <% } else { %>
                    <tr class="border-b border-gray-200">
                        <td colspan="7" class="py-3 px-6 text-center">No products found</td>
                    </tr>
                <% } %>
            </tbody>
        </table>
    </div>
</section>

<script>
    // Toggle product availability
    document.querySelectorAll('.status-toggle').forEach(toggle => {
        toggle.addEventListener('click', async function() {
            const productId = this.dataset.id;
            const currentStatus = this.dataset.status === 'true';
            
            try {
                const response = await fetch(`/admin/products/${productId}/toggle-availability`, {
                    method: 'PATCH',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                });
                
                const result = await response.json();
                
                if (result.success) {
                    // Update UI
                    this.textContent = result.isAvailable ? 'Available' : 'Unavailable';
                    this.dataset.status = result.isAvailable;
                    
                    if (result.isAvailable) {
                        this.classList.remove('bg-red-200', 'text-red-600');
                        this.classList.add('bg-green-200', 'text-green-600');
                    } else {
                        this.classList.remove('bg-green-200', 'text-green-600');
                        this.classList.add('bg-red-200', 'text-red-600');
                    }
                    
                    // Show notification
                    new Noty({
                        type: 'success',
                        timeout: 1000,
                        text: result.message,
                        progressBar: false,
                    }).show();
                } else {
                    throw new Error(result.message);
                }
            } catch (error) {
                new Noty({
                    type: 'error',
                    timeout: 1000,
                    text: error.message || 'Something went wrong',
                    progressBar: false,
                }).show();
            }
        });
    });
</script> 